@import '../../common/common';

// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information.

//
// Office UI Fabric
// --------------------------------------------------
// Persona styles


//= Colors used in the initials color block
$ms-color-initials-lightBlue:   #6BA5E7;
$ms-color-initials-blue:        #2D89EF;
$ms-color-initials-darkBlue:    #2B5797;
$ms-color-initials-teal:        #00ABA9;
$ms-color-initials-lightGreen:  #99B433;
$ms-color-initials-green:       #00A300;
$ms-color-initials-darkGreen:   #1E7145;
$ms-color-initials-lightPink:   #E773BD;
$ms-color-initials-pink:        #FF0097;
$ms-color-initials-magenta:     #7E3878;
$ms-color-initials-purple:      #603CBA;
$ms-color-initials-black:       #1D1D1D;
$ms-color-initials-orange:      #DA532C;
$ms-color-initials-red:         #EE1111;
$ms-color-initials-darkRed:     #B91D47;

// Skype presence colors
$ms-color-presence-available:          #7FBA00;
$ms-color-presence-away:               #FCD116;
$ms-color-presence-busy:               #E81123;
$ms-color-presence-dnd-background:     #E81123;
$ms-color-presence-dnd-line:           #FFFFFF;
$ms-color-presence-offline:            #93ABBD;
$ms-color-presence-out-of-office:      $ms-color-magenta;

// Other presence colors
$ms-color-presence-blocked-background: #DEDEDE;
$ms-color-presence-blocked-line:       #C72D25;
$ms-color-presence-busy-stripe-light:  #E57A79;
$ms-color-presence-busy-stripe-dark:   #D00E0D;
$ms-color-presence-busy-average:       #D93B3B;

// Persona Sizes
$ms-Persona-sizeTiny: 30px;
$ms-Persona-sizeXxs:  24px;
$ms-Persona-size28:  28px;
$ms-Persona-sizeXs:   32px;
$ms-Persona-sizeSm:   40px;
$ms-Persona-sizeMd:   48px;
$ms-Persona-sizeLg:   72px;
$ms-Persona-sizeXl:   100px;

// Details Spacing
$ms-Persona-imageDetailsSmSpace: 8px;
$ms-Persona-imageDetailsLgSpace: 12px;
$ms-Persona-imageDetailsXlSpace: 20px;

// Presence Sizes
$ms-Persona-presenceSizeXxs: 8px;
$ms-Persona-presenceSizeMd: 12px;
$ms-Persona-presenceSizeLg: 20px;
$ms-Persona-presenceSizeXl: 28px;

.root {
  @include ms-baseFont;
  @include ms-u-normalize;
  color: $ms-color-neutralPrimary;
  font-size: $ms-font-size-m;
  font-weight: $ms-font-weight-regular;
  line-height: 1;
  position: relative;
  height: $ms-Persona-sizeMd;
  display: flex;
  align-items: center;

  .contextualHost {
    display: none;
  }
}

.imageArea {
  position: relative;
  overflow: hidden;
  text-align: center;
  flex: 0 0 $ms-Persona-sizeMd;
  height: $ms-Persona-sizeMd;
  width: $ms-Persona-sizeMd;
  border-radius: 50%;

  @media screen and (-ms-high-contrast: active) {
    border: 1px solid $ms-color-white;
  }

  @media screen and (-ms-high-contrast: black-on-white) {
    border: 1px solid $ms-color-black;
  }

  .image {
    border: 0px;
  }
}

//= Note: The doughboy placeholder is being deprecated.
// The initials color block (.ms-Persona-initials) will be used going forward
// as a fallback when the persona does not have an image.
.placeholder {
  color: $ms-color-white;
  position: absolute;
  right: 0;
  left: 0;
  font-size: 47px;
  top: 9px;
  z-index: $ms-zIndex-middle;
}

.initials {
  color: $ms-color-white;
  font-size: $ms-font-size-l;
  font-weight: $ms-font-weight-light;
  line-height: 46px;
  height: $ms-Persona-sizeMd;

  &.initialsIsLightBlue {
    background-color: $ms-color-initials-lightBlue;
  }
  &.initialsIsBlue {
    background-color: $ms-color-initials-blue;
  }
  &.initialsIsDarkBlue {
    background-color: $ms-color-initials-darkBlue;
  }
  &.initialsIsTeal {
    background-color: $ms-color-initials-teal;
  }
  &.initialsIsLightGreen {
    background-color: $ms-color-initials-lightGreen;
  }
  &.initialsIsGreen {
    background-color: $ms-color-initials-green;
  }
  &.initialsIsDarkGreen {
    background-color: $ms-color-initials-darkGreen;
  }
  &.initialsIsLightPink {
    background-color: $ms-color-initials-lightPink;
  }
  &.initialsIsPink {
    background-color: $ms-color-initials-pink;
  }
  &.initialsIsMagenta {
    background-color: $ms-color-initials-magenta;
  }
  &.initialsIsPurple {
    background-color: $ms-color-initials-purple;
  }
  &.initialsIsBlack {
    background-color: $ms-color-initials-black;
  }
  &.initialsIsOrange {
    background-color: $ms-color-initials-orange;
  }
  &.initialsIsRed {
    background-color: $ms-color-initials-red;
  }
  &.initialsIsDarkRed {
    background-color: $ms-color-initials-darkRed;
  }
}

.image {
  @include margin-right(10px);
  position: absolute;
  top: 0;
  @include left(0);
  width: 100%;
  height: 100%;
  border-radius: 50%;
  perspective: 1px;
}

.image[src=""] {
  display: none;
}

.presence {
  background-color: $ms-color-presence-available;
  position: absolute;
  height: $ms-Persona-presenceSizeMd;
  width: $ms-Persona-presenceSizeMd;
  border-radius: 50%;
  top: auto;
  @include left(34px);
  bottom: -1px;
  border: 2px solid $ms-color-white;
  text-align: center;
  box-sizing: content-box;
  // Setting -ms-high-contrast-adjust to none Overrides the default behaviors of high contrast more in the Edge browser.
  -ms-high-contrast-adjust: none;
  // This is a temporary local fix and should be removed once Fabric Core 6.0 is released.

  @media screen and (-ms-high-contrast: active) {
    border-color: $ms-color-black;
    color: $ms-color-black;
    background-color: $ms-color-white;
  }

  @media screen and (-ms-high-contrast: black-on-white) {
    border-color: $ms-color-white;
    color: $ms-color-white;
    background-color: $ms-color-black;
  }

  .presenceIcon {
    color: $ms-color-white;
    font-size: 8px;
    line-height: $ms-Persona-presenceSizeMd;
    vertical-align: top;

    @media screen and (-ms-high-contrast: active) {
      color: $ms-color-black;
    }

    @media screen and (-ms-high-contrast: black-on-white) {
      color: $ms-color-white;
    }
  }
}

.details {
  @include padding(0, 24px, 0, 12px);
  min-width: 0;
  width: 100%;
  @include text-align(left);
}

.primaryText,
.secondaryText,
.tertiaryText,
.optionalText,
.textContent {
  @include noWrap();
}

.primaryText {
  color: $ms-color-neutralPrimary;
  font-weight: $ms-font-weight-regular;
  font-size: $ms-font-size-l;
  margin-top: -3px;
  line-height: 1.4;
}

.secondaryText,
.tertiaryText,
.optionalText {
  color: $ms-color-neutralSecondary;
  font-weight: $ms-font-weight-regular;
  font-size: $ms-font-size-s;
  white-space: nowrap;
  line-height: 1.3;
}

.secondaryText {
  padding-top: 3px;
}

.tertiaryText,
.optionalText {
  padding-top: 5px;
  display: none; // Hidden on default persona
}


//== Modifier: Tiny Persona
//
.root.rootIsTiny {
  height: $ms-Persona-sizeTiny;
  min-width: $ms-Persona-sizeTiny;

  .imageArea {
    overflow: visible;
    background: transparent;
    height: 0;
    width: 0;
  }

  .presence {
    @include right(auto);
    top: 10px;
    @include left(0);
    border: 0;

    @media screen and (-ms-high-contrast: active) {
      top: 9px;
      border: 1px solid $ms-color-white;
    }

    @media screen and (-ms-high-contrast: black-on-white) {
      border: 1px solid $ms-color-black;
    }
  }

  .details {
    @include padding-left(20px);
  }

  .primaryText {
    font-size: $ms-font-size-m;
    padding-top: 4px;
  }

  .secondaryText {
    display: none;
  }
}


//== Modifier: Tiny Persona with read only state
//
// This variant includes a semicolon, and is
// most often presented within a People Picker.
.root.rootIsTiny.rootIsReadonly {
  padding: 0;
  background-color: transparent;

  .primaryText:after {
    content: ';';
  }
}


//== Modifier: Extra Small Persona
//
.root.rootIsExtraExtraSmall {
  height: $ms-Persona-sizeXxs;
  line-height: $ms-Persona-sizeXxs;
  min-width: $ms-Persona-sizeXxs;
  margin-right: 4px;

  .imageArea,
  .image {
    flex: 0 0 $ms-Persona-sizeXxs;
    height: $ms-Persona-sizeXxs;
    width: $ms-Persona-sizeXxs;
  }

  .placeholder {
    font-size: 18px;
    top: 4px;
  }

  .initials {
    font-size: $ms-font-size-xs;
    height: $ms-Persona-sizeXxs;
    line-height: $ms-Persona-sizeXxs;
  }

  .presence {
    height: $ms-Persona-presenceSizeXxs;
    width: $ms-Persona-presenceSizeXxs;
    border: 4px solid #ffffff;
    @include left(16px);
  }

  .presenceIcon {
    font-size: 6px;
    line-height: 9px;
  }

  .primaryText {
    font-size: $ms-font-size-m;
    padding-top: 3px;
  }

  .secondaryText {
    display: none;
  }
}


//== Modifier: 28px Persona
//
.root.rootIs28 {
  height: $ms-Persona-size28;
  line-height: $ms-Persona-size28;
  min-width: $ms-Persona-size28;

  .imageArea,
  .image {
    flex: 0 0 $ms-Persona-size28;
    height: $ms-Persona-size28;
    width: $ms-Persona-size28;
  }

  .placeholder {
    font-size: 18px;
    top: 4px;
  }

  .initials {
    font-size: $ms-font-size-xs;
    height: $ms-Persona-sizeXxs;
    line-height: $ms-Persona-sizeXxs;
  }

  .presence {
    height: $ms-Persona-presenceSizeXxs;
    width: $ms-Persona-presenceSizeXxs;
    border: 4px solid #ffffff;
    @include left(16px);
  }

  .presenceIcon {
    font-size: 6px;
    line-height: 9px;
  }

  .primaryText {
    font-size: $ms-font-size-m;
    padding-top: 3px;
  }

  .secondaryText {
    display: none;
  }
}


//== Modifier: Extra Small Persona
//
.root.rootIsExtraSmall {
  height: $ms-Persona-sizeXs;
  line-height: $ms-Persona-sizeXs;
  min-width: $ms-Persona-sizeXs;

  .imageArea,
  .image {
    flex: 0 0 $ms-Persona-sizeXs;
    height: $ms-Persona-sizeXs;
    width: $ms-Persona-sizeXs;
  }

  .placeholder {
    font-size: 28px;
    top: 6px;
  }

  .initials {
    font-size: $ms-font-size-s;
    height: $ms-Persona-sizeXs;
    line-height: $ms-Persona-sizeXs;
  }

  .presence {
    @include left(19px);
  }

  .primaryText {
    font-size: $ms-font-size-m;
    padding-top: 3px;
  }

  .secondaryText {
    display: none;
  }
}


//== Modifier: Small Persona
//
.root.rootIsSmall {
  height: $ms-Persona-sizeSm;
  line-height: $ms-Persona-sizeSm;
  min-width: $ms-Persona-sizeSm;

  .imageArea,
  .image {
    flex: 0 0 $ms-Persona-sizeSm;
    height: $ms-Persona-sizeSm;
    width: $ms-Persona-sizeSm;
  }

  .placeholder {
    font-size: 38px;
    top: 5px;
  }

  .initials {
    font-size: $ms-font-size-m;
    height: $ms-Persona-sizeSm;
    line-height: $ms-Persona-sizeSm;
  }

  .presence {
    @include left(27px);
  }

  .primaryText {
    font-size: $ms-font-size-m;
  }

  .primaryText,
  .secondaryText {
    padding-top: 1px;
  }
}


//== Modifier: Large Persona
//
.root.rootIsLarge {
  height: $ms-Persona-sizeLg;
  line-height: $ms-Persona-sizeLg;
  min-width: $ms-Persona-sizeLg;

  .imageArea,
  .image {
    flex: 0 0 $ms-Persona-sizeLg;
    height: $ms-Persona-sizeLg;
    width: $ms-Persona-sizeLg;
  }

  .placeholder {
    font-size: 67px;
    top: 10px;
  }

  .initials {
    font-size: $ms-font-size-xxl;
    height: $ms-Persona-sizeLg;
    line-height: 70px;
  }

  .presence {
    @include left(49px);
    height: $ms-Persona-presenceSizeLg;
    width: $ms-Persona-presenceSizeLg;
    border-width: 3px;
  }

  .presenceIcon {
    line-height: $ms-Persona-presenceSizeLg;
    font-size: $ms-font-size-m;
  }

  .secondaryText {
    padding-top: 3px;
  }

  .tertiaryText {
    padding-top: 5px;
    display: block;
  }
}


//== Modifier: Extra Large Persona
//
.root.rootIsExtraLarge {
  height: $ms-Persona-sizeXl;
  line-height: $ms-Persona-sizeXl;
  min-width: $ms-Persona-sizeXl;

  .imageArea,
  .image {
    flex: 0 0 $ms-Persona-sizeXl;
    height: $ms-Persona-sizeXl;
    width: $ms-Persona-sizeXl;
  }

  .placeholder {
    font-size: 95px;
    top: 12px;
  }

  .initials {
    font-size: $ms-font-size-su;
    height: $ms-Persona-sizeXl;
    line-height: 96px;
  }

  .presence {
    height: $ms-Persona-presenceSizeXl;
    width: $ms-Persona-presenceSizeXl;
    @include left(71px);
    border-width: 4px;
  }

  .presenceIcon {
    line-height: $ms-Persona-presenceSizeXl;
    font-size: $ms-font-size-xl;
    position: relative;
    top: 1px;
  }

  .primaryText {
    font-size: $ms-font-size-xl;
    font-weight: $ms-font-weight-semilight;
    margin-top: 0;
  }

  .secondaryText {
    padding-top: 2px;
  }

  .tertiaryText,
  .optionalText {
    padding-top: 5px;
    display: block; // Show tertiary and optional text
  }
}


//== Modifier: Persona with darker text
//
// Note: Typically applied when the component has a colored background.
.root.rootIsDarkText {
  .primaryText {
    color: $ms-color-neutralDark;
  }

  .secondaryText,
  .tertiaryText,
  .optionalText {
    color: $ms-color-neutralPrimary;
  }
}


//== Modifier: Selectable Persona
//
.root.rootIsSelectable {
  cursor: pointer;
  padding: 0 10px;

  &:not(.rootExtraLarge) {
    &:hover,
    &:focus {
      background-color: $ms-color-themeLighter;
      outline: 1px solid transparent;
    }
  }
}


//== Presence indicator variants.

//== Modifier: Persona with available presence
//
.root.rootIsAvailable {
  .presence {
    background-color: $ms-color-presence-available;

    @media screen and (-ms-high-contrast: active) {
      background-color: $ms-color-white;
    }

    @media screen and (-ms-high-contrast: black-on-white) {
      background-color: $ms-color-contrastWhiteDisabled;
    }
  }
}


//== Modifier: Persona with away presence
//
.root.rootIsAway {
  .presence {
    background-color: $ms-color-presence-away;

    @media screen and (-ms-high-contrast: active) {
      background-color: $ms-color-white;
    }

    @media screen and (-ms-high-contrast: black-on-white) {
      background-color: $ms-color-black;
    }
  }

  .presenceIcon {
    position: relative;
    @include left(1px);
  }
}


//== Modifier: Persona with blocked presence
//
.root.rootIsBlocked {
  .presence {
    background-color: $ms-color-white;

    &::before {
      content: '';
      width: 100%;
      height: 100%;
      position: absolute;
      top: 0;
      @include left(0);
      box-shadow: 0 0 0 2px $ms-color-presence-busy-average inset;
      border-radius: 50%;
    }

    &::after {
      content: '';
      width: 100%;
      height: 2px;
      background-color: $ms-color-presence-busy-average;
      transform: rotate(-45deg);
      position: absolute;
      top: 5px;
      @include left(0);
    }



    @media screen and (-ms-high-contrast: active) {
      color: $ms-color-contrastBlackDisabled;
      background-color: $ms-color-black;

      &::before {
        box-shadow: 0 0 0 2px $ms-color-contrastBlackDisabled inset;
      }

      &::after {
        background-color: $ms-color-contrastBlackDisabled;
      }
    }

    @media screen and (-ms-high-contrast: black-on-white) {
      color: $ms-color-contrastWhiteDisabled;
      background-color: $ms-color-white;

      &::before {
        box-shadow: 0 0 0 2px $ms-color-contrastWhiteDisabled inset;
      }

      &::after {
        background-color: $ms-color-contrastWhiteDisabled;
      }
    }
  }

  &.rootIsLarge {
    .presence {
      &::after {
        top: 9px;
      }
    }
  }

  &.rootIsExtraLarge {
    .presence {
      &::after {
        top: 13px;
      }
    }
  }
}


//== Modifier: Persona with busy presence
//
.root.rootIsBusy {
  .presence {
    background-color: $ms-color-presence-busy-average;

    @media screen and (-ms-high-contrast: active) {
      background-color: $ms-color-contrastBlackDisabled;
    }

    @media screen and (-ms-high-contrast: black-on-white) {
      background-color: $ms-color-contrastWhiteDisabled;
    }
  }
}


//== Modifier: Persona with do not disturb presence
//
.root.rootIsDoNotDisturb {
  .presence {
    background-color: $ms-color-presence-dnd-background;

    @media screen and (-ms-high-contrast: active) {
      color: $ms-color-black;
      background-color: $ms-color-contrastBlackDisabled;

      &::before {
        background-color: $ms-color-contrastBlackDisabled;
      }

      &::after {
        background-color: $ms-color-contrastBlackDisabled;
      }
    }

    @media screen and (-ms-high-contrast: black-on-white) {
      background-color: $ms-color-contrastWhiteDisabled;
    }
  }
}


//== Modifier: Persona with offline presence
//
.root.rootIsOffline {
  .presence {
    background-color: $ms-color-presence-offline;

    @media screen and (-ms-high-contrast: active) {
      background-color: $ms-color-contrastBlackDisabled;
      box-shadow: 0 0 0 1px $ms-color-white inset;
    }

    @media screen and (-ms-high-contrast: black-on-white) {
      background-color: $ms-color-white;
      box-shadow: 0 0 0 1px $ms-color-black inset;
    }
  }
}
